#!/bin/bash
#
# This is a simple kernel hook to populate the systemd-boot entries
# whenever kernels are added or removed.
#

# The UUID of your disk.
UUID="CHANGEME"

# The LUKS volume slug you want to use, which will result in the
# partition being mounted to /dev/mapper/CHANGEME.
VOLUME="LinuxCrypt"

# Any rootflags you wish to set.
ROOTFLAGS="subvol=/ubuntu-lts/@"

# Our kernels.
KERNELS=()
FIND="find /boot -maxdepth 1 -name 'vmlinuz-*' -type f -not -name '*.dpkg-tmp' -print0 | sort -Vrz"
while IFS= read -r -u3 -d $'\0' LINE; do
    KERNEL=$(basename "${LINE}")
    KERNELS+=("${KERNEL:8}")
done 3< <(eval "${FIND}")

# There has to be at least one kernel.
if [ ${#KERNELS[@]} -lt 1 ]; then
    echo -e "\e[2msystemd-boot\e[0m \e[1;31mNo kernels found.\e[0m"
    exit 1
fi

## Perform a nuclear clean to ensure everything is always in perfect sync.
# rm /boot/efi/loader/entries/*.conf
# rm -rf /boot/efi/ubuntu
# mkdir /boot/efi/ubuntu
#
# rm /boot/efi/loader/entries/Ubuntu-LTS-latest.conf
# rm /boot/efi/loader/entries/Ubuntu-LTS-legacy.conf
#
rm -rf /boot/efi/EFI/Ubuntu-LTS/
mkdir /boot/efi/EFI/Ubuntu-LTS/

# Copy the latest kernel files to a consistent place so we can keep
# using the same loader configuration.
LATEST_VERSION="${KERNELS[@]:0:1}"
echo -e "\e[2msystemd-boot\e[0m \e[1;32m${LATEST_VERSION}\e[0m"
for FILE in config initrd.img System.map vmlinuz; do
    cp "/boot/${FILE}-${LATEST_VERSION}" "/boot/efi/EFI/Ubuntu-LTS/${FILE}-${LATEST_VERSION}"
    cat << EOF > /boot/efi/loader/entries/Ubuntu-LTS-latest.conf
title   Ubuntu LTS ${LATEST_VERSION} (latest)
linux   /EFI/Ubuntu-LTS/vmlinuz-${LATEST_VERSION}
initrd  /EFI/Ubuntu-LTS/initrd.img-${LATEST_VERSION}
options cryptdevice=UUID=${UUID}:${VOLUME} root=/dev/mapper/${VOLUME} ro quiet splash rootflags=${ROOTFLAGS}
EOF
done

# Copy any legacy kernels over too, but maintain their version-based
# names to avoid collisions.
if [ ${#KERNELS[@]} -gt 1 ]; then
    LEGACY_LIST=("${KERNELS[@]:1}")
    for LEGACY_VERSION in "${LEGACY_LIST[@]}"; do
        echo -e "\e[2msystemd-boot\e[0m \e[1;32m${LEGACY_VERSION}\e[0m"
        for FILE in config initrd.img System.map vmlinuz; do
            cp "/boot/${FILE}-${LEGACY_VERSION}" "/boot/efi/EFI/Ubuntu-LTS/${FILE}-${LEGACY_VERSION}"
            cat << EOF > /boot/efi/loader/entries/Ubuntu-LTS-legacy.conf
title   Ubuntu LTS ${LEGACY_VERSION}
linux   /EFI/Ubuntu-LTS/vmlinuz-${LEGACY_VERSION}
initrd  /EFI/Ubuntu-LTS/initrd.img-${LEGACY_VERSION}
options cryptdevice=UUID=${UUID}:${VOLUME} root=/dev/mapper/${VOLUME} ro quiet splash rootflags=${ROOTFLAGS}
EOF
        done
    done
fi

# Success!
exit 0
